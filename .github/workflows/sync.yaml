name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Sync
        uses: patrickwyler/gcs-bucket-sync-action@1.4
        with:
          secrets: ${{ secrets.google_service_account_credentials }}
          bucket: 'wm-fuse-bucket'
          exclude: '.*\.md$|\.gitignore$|\.git/.*$|\.github/.*$'
  
  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
      - name: Collect Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v44
      
      - name: Append to JSON File
        run: |
         # Create the JSON file if it doesn't exist
         touch changed_files.json
        
         # Read the existing JSON file
         existing_json=$(cat changed_files.json)
        
         # Construct the new JSON object
         new_json=$(jq -n \
          --arg added "${{ steps.changed-files.outputs.added_files }}" \
          --arg copied "${{ steps.changed-files.outputs.copied_files }}" \
          --arg modified "${{ steps.changed-files.outputs.modified_files }}" \
          --arg renamed "${{ steps.changed-files.outputs.renamed_files }}" \
          --arg deleted "${{ steps.changed-files.outputs.deleted_files }}" \
          '{
            "added": ($added | fromjson),
            "copied": ($copied | fromjson),
            "modified": ($modified | fromjson),
            "renamed": ($renamed | fromjson),
            "deleted": ($deleted | fromjson)
          }')
        
          # Merge the existing and new JSON objects
          merged_json=$(echo "$existing_json $new_json" | jq -s add)
        
          # Write the merged JSON to the file
          echo "$merged_json" > changed_files.json
        
          # Print the contents of the JSON file
          cat changed_files.json
         shell: bash
      # - uses: tj-actions/changed-files@v44
      #   id: changed-files
      #   with:
      #     format: 'json'
      # - run: |
      #     echo "Added files: ${{ steps.changed-files.outputs.added_files }}"
      #     echo "Modified files: ${{ steps.changed-files.outputs.modified_files }}"
      #     echo "Deleted files: ${{ steps.changed-files.outputs.deleted_files }}"
      #     echo "Copied files: ${{ steps.changed-files.outputs.copied_files }}"
      #     echo "Renamed files: ${{ steps.changed-files.outputs.renamed_files }}"
          
      # - uses: yumemi-inc/changed-files@v3
      #   id: changed
      #   with:
      #     format: 'json'
      #     statuses: 'added|modified|renamed'
      # - run: |
      #     for file in ${{ steps.changed.outputs.files }}; do
      #       echo "$file"
      #     done
      
      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v44
      #   with:
      #     json: "true"
      #   # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
      #   # with:
      #   #   since_last_remote_commit: true 

      # - name: List all changed files
      #   env:
      #     ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_modified_files }}
      #   run: |
      #     for file in ${ALL_CHANGED_FILES}; do
      #       echo "$file was changed"
      #     done
